/*Define a class MyDate(Day, Month, year) with methods to accept and display a MyDateobject. 
Accept date as dd,mm,yyyy. Throw user defined exception "InvalidDateException" if the date 
is invalid.*/ 

class InvalidDateException extends Exception  
{ 
    public InvalidDateException(String message)  
    { 
        super(message); 
    } 
} 
public class Slip21Question1  
{ 
    private int day; 
    private int month; 
    private int year; 
    public Slip21Question1(int day, int month, int year) throws InvalidDateException  
     { 
        this.day = day; 
        this.month = month; 
        this.year = year; 
        if (!isValidDate())  
        { 
            throw new InvalidDateException("Invalid date: " + day + "/" + month + "/" + year); 
        } 
    }  
    private boolean isValidDate()  
     { 
        if (year <= 0) return false; 
        if (month < 1 || month > 12) return false; 
        int daysInMonth;   
        switch (month)  
 { 
            case 1:  
             case 3:  
 case 5:  
 case 7:  
 case 8:  
 case 10:  
 case 12: 
                daysInMonth = 31; 
                break; 
            case 4:  
 case 6:  
 case 9:  
 case 11: 
                daysInMonth = 30; 
                break; 
            case 2: 
                if (isLeapYear())  
 { 
                    daysInMonth = 29; 
                }  
 else  
 { 
                    daysInMonth = 28; 
                } 
                break; 
            default: 
                return false; 
        } 
        return day >= 1 && day <= daysInMonth; 
    } 
    private boolean isLeapYear()  
      { 
        if ((year % 400) == 0)  
 { 
            return true; 
        } 
        if ((year % 100) == 0)  
 { 
            return false; 
        } 
        return (year % 4) == 0; 
    } 
    public void display()  
     { 
        System.out.printf("Date: %02d/%02d/%04d%n", day, month, year); 
    } 
 
    public static void main(String[] args)  
 { 
        try  
 { 
            Slip21Question1 date1 = new Slip21Question1(29, 2, 2024);  // Valid leap year date 
            date1.display(); 
            Slip21Question1 date2 = new Slip21Question1(31, 4, 2023);  // Invalid date (April has 30 days) 
            date2.display(); 
        }  
 catch (InvalidDateException e)  
 { 
            System.out.println(e.getMessage()); 
        } 
    } 
}






/*Create an employee class(id,name,deptname,salary). Define a default and parameterized constructor. 
Use ‘this’ keyword to initialize instance variables. Keep a count of objects created. Create objects using 
parameterized constructor and display the object count after each object is created. (Use static member 
and method). Also display the contents of each object.*/ 


public class Slip21Question2  
{ 
    private int id; 
    private String name; 
    private String deptname; 
    private double salary; 
    private static int count = 0; 
    public Slip21Question2()  
   { 
        this.id = 0; 
        this.name = "Unknown"; 
        this.deptname = "Unknown"; 
        this.salary = 0.0; 
        count++; 
    } 
    public Slip21Question2(int id, String name, String deptname, double salary)  
     { 
        this.id = id; 
        this.name = name; 
        this.deptname = deptname; 
        this.salary = salary; 
        count++; 
    } 
    public static int getCount()  
    { 
        return count; 
    } 
    public void display()  
    { 
        System.out.println("Employee ID: " + id); 
        System.out.println("Name       : " + name); 
        System.out.println("Dept Name  : " + deptname); 
        System.out.println("Salary     : $" + salary); 
        System.out.println("-------------------------"); 
    } 
    public static void main(String[] args)  
    { 
        Slip21Question2 e1 = new Slip21Question2(101, "Alice", "HR", 50000); 
        e1.display(); 
        System.out.println("Total employees: " + Slip21Question2.getCount()); 
        Slip21Question2 e2 = new Slip21Question2(102, "Bob", "Finance", 60000); 
        e2.display(); 
        System.out.println("Total employees: " + Slip21Question2.getCount()); 
        Slip21Question2 e3 = new Slip21Question2(103, "Charlie", "IT", 70000); 
        e3.display(); 
        System.out.println("Total employees: " + Slip21Question2.getCount()); 
    } 
} 
